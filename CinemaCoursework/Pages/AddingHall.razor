@page "/adding_hall" 
@using CinemaCoursework.Data 
@using CinemaCoursework.Services 
@inject PagesList pageList 
@inject DataBase dataBase 
@inject IJSRuntime JS 

<PageTitle>Добавление кинозала</PageTitle> 

<style type="text/css"> 
    .lbl { 
        font-size: 23px; 
    } 

    .field { 
        width: 85%; 
        background: #9F4FF9; 
        border-radius: 20px; 
        font-size: 23px; 
        padding: 7px;
    } 

    .button { 
        margin-left: 50%; 
        height: 50px; 
        width: 200px; 
        background: #9F4FF9; 
        border-radius: 15px; 
        font-size: 23px; 
    } 

    .block { 
        margin-left: 33%; 
        margin-top: 23%; 
    } 
</style> 

<div class="block"> 
    <table> 
        <tr> 
            <td><label class="lbl">Название зала:</label></td> 
            <td><input class="field" id="hall_name" type="text" @bind-value="@hallName"></td> 
        </tr> 
        <tr><td><label></label></td></tr> 
        <tr> 
            <td><button class="button" @onclick="Create">Создать зал</button><br /></td> 
        </tr> 
    </table> 
</div> 

@code {
    private Hall hall = new Hall();
    private string hallName = "";

    public void Create()
    {
        if (hallName != "")
        {
            dataBase.CurrentHall = new Hall()
                {
                    Name = hallName
                };

            dataBase.AddHallToDataBase(dataBase.CurrentHall);
            JS.InvokeVoidAsync("alert", "Кинозал был добавлен в базу данных");
            hallName = "";
        }
        else
        {
            JS.InvokeVoidAsync("alert", "Для создания нового кинозала все поля должны быть заполнены!");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetPageName();
    }

    public async Task GetPageName()
    {
        pageList.PageName = "AddingHall";
        await base.OnInitializedAsync();
    } 
}
