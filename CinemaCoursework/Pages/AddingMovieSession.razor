@page "/adding_movie_session"
@using CinemaCoursework.Data
@using CinemaCoursework.Services
@inject PagesList pageList
@inject DataBase dataBase
@inject IJSRuntime JS

<PageTitle>Добавление киносеанса</PageTitle>

<style type="text/css">
    .lbl {
        font-size: 23px;
    }

    .field {
        width: 85%;
        background: #9F4FF9;
        border-radius: 20px;
        font-size: 20px;
        padding: 7px;
    }

    .button {
        margin-left: 55%;
        height: 50px;
        width: 200px;
        background: #9F4FF9;
        border-radius: 15px;
        font-size: 23px;
    }

    .block {
        margin-left: 27%;
        margin-top: 13%;
    }
</style>

<div class="block">
    <table>
        <tr>
            <td><label class="lbl">Дата показа:</label></td>
            <td>
                <MudDatePicker Style="background:#9F4FF9; width: 85%; border-radius: 20px; font-size: 20px; padding: 2px;" @bind-Date="@date" />
            </td>
        </tr>
        <tr><td><label></label></td></tr>
        <tr>
            <td><label class="lbl">Время:</label></td>
            <td><input class="field" id="session_time" type="text" @bind-value="@time"></td>
        </tr>
        <tr><td><label></label></td></tr>
        <tr>
            <td><label class="lbl">Название зала (2D, 3D, VIP):</label></td>
            <td><input class="field" id="hall_name" type="text" @bind-value="@hallName"></td>
        </tr>
        <tr><td><label></label></td></tr>
        <tr>
            <td><label class="lbl">Название фильма:</label></td>
            <td><input class="field" id="movie_name" type="text" @bind-value="@movieName"></td>
        </tr>
        <tr><td><label></label></td></tr>
        <tr>
            <td><button class="button" @onclick="Create">Сохранить</button><br /></td>
        </tr>
    </table>
</div>

@code
{
    private Session session = new Session();
    private DateTime? date { get; set; } = new DateTime(2023, 01, 01);
    private string movieName = "";
    private string hallName = "";
    private TimeSpan? time { get; set; } = new TimeSpan(00, 00, 00);

    public void Create()
    {
        if (date != null && time != null && hallName != null && movieName != null)
        {
            session.Movie = dataBase.FindByMovieName(movieName);
            session.Hall = dataBase.FindByHallName(hallName);

            DateTime date1 = (DateTime)date;
            TimeSpan time1 = (TimeSpan)time;
            DateTime dateTime = date1 + time1.Add(new TimeSpan(03, 00, 00));

            dataBase.CurrentSession = new Session()
            {
                Movie = session.Movie,
                Hall = session.Hall,
                Time = dateTime
            };

            dataBase.AddSessionToDataBase(dataBase.CurrentSession);
            JS.InvokeVoidAsync("alert", "Киносеанс был добавлен в базу данных");
        }
        else
        {
            JS.InvokeVoidAsync("alert", "Для создания нового киносеанса все поля должны быть заполнены!");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetPageName();
    }

    public async Task GetPageName()
    {
        pageList.PageName = "AddingMovieSession";
        await base.OnInitializedAsync();
    }
}
