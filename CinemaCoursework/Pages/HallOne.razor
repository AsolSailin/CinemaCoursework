@page "/hall_one"
@using CinemaCoursework.Data
@using CinemaCoursework.Services
@inject PagesList pageList
@inject DataBase dataBase
@inject Session session
@inject IJSRuntime JS

<PageTitle>2D hall</PageTitle>

<style>
    .button {
        position: absolute;
        left: 49%;
        top: 75%;
        height: 10%;
        width: 20%;
        background: #9F4FF9;
        border-radius: 15px;
        font-size: 23px;
    }

    .button3d {
        position: absolute;
        left: 53.5%;
        background: #9F4FF9;
        border-radius: 15px;
        font-size: 23px;
    }

    .buttonVip {
        position: absolute;
        left: 62.3%;
        background: #9F4FF9;
        border-radius: 15px;
        font-size: 23px;
    }

    .buttonOne, .placeOne {
        position: relative;
        display: inline-block;
        background: #9F4FF9;
        width: 3em;
        height: 3em;
        line-height: 2em;
        text-align: center;
        text-decoration: none;
        outline: none;
        border-radius: 5px;
    }

    .buttonTwo, .placeTwo {
        position: relative;
        display: inline-block;
        background: #902DFF;
        width: 3em;
        height: 3em;
        line-height: 2em;
        text-align: center;
        text-decoration: none;
        outline: none;
        border-radius: 5px;
    }

    .buttonOne:hover, .buttonTwo:hover, .buttonOne:focus, .buttonTwo:focus {
        background: #6921BB;
    }

    .buttonOne:active, .buttonTwo:active {
        background: none;
    }

    .block {
        position: absolute;
        left: 43%;
        top: 25%;
    }
</style>

<div class="block">
    @foreach (var p in session.Hall.Places)
    {
        @if (p.Value == "false")
        {
            <button class="buttonOne" @onclick="() => Place(p.Key)">@p.Key</button>
        }
        else
        {
            <button class="buttonTwo" @onclick="() => OccupiedPlace()">@p.Key</button>
        }

        count++;
        @if (count == 10)
        {
            <br /> <br />
            count = 0;
        }
    }
</div>

<button class="button" @onclick="Buy">Купить билет</button>

<label>Ваше место: @place</label>

@code {
    int count = 0; 
    string place = "";

    public void Buy()
    {
        if (place != "")
        {
            session.Hall.Places[place] = "true";
        }
        
        dataBase.SessionReplace(session.Id, session);
    }

    public void Place(string placeNumber)
    {
        place = placeNumber;
    }

    public void OccupiedPlace()
    {
        JS.InvokeVoidAsync("alert", "Вы не можете выбрать это место, так как оно уже занято");
    }

    protected override async Task OnInitializedAsync()
    {
        session = dataBase.FindSessionByMovieName(dataBase.CurrentMovie);
        await GetPageName();
    }

    public async Task GetPageName()
    {
        pageList.PageName = "HallOne";
        await base.OnInitializedAsync();
    }
}